substitutions:
  devicename: shelly-stairs
  formated_name: Shelly Stairs
  max_power: "2000.0" # watts
  # Name for the relays
  channel_1: Stairs
  channel_2: Family Room

  comment: |-
    Smart Bulb connected to output relay_output_1
    Dumb Bulb connected to output relay_output_2

<<: !include common/esphome/esp32doit.yaml

<<: !include common/common.yaml

i2c:
  sda: GPIO26
  scl: GPIO25

output:
  - platform: gpio
    id: relay_output_1
    pin: GPIO12
  - platform: gpio
    id: relay_output_2
    pin: GPIO13

switch:
  # Lifx Stairs bulb, it should always be on to be controlled via binary sensor
  - platform: output
    id: relay_1_switch
    name: ${channel_1} relay
    output: relay_output_1
    internal: true
    restore_mode: ALWAYS_ON

light:
  - platform: binary
    name: ${channel_2} Light
    output: relay_output_2
    id: family_room_light

binary_sensor:
  # Input 1 Dumb Bulb
  - platform: gpio
    id: input_1
    pin: GPIO5
    on_state:
      then:
        - light.toggle: family_room_light
    internal: true
  # Input 2 Smart Bulb
  - platform: gpio
    id: input_2
    pin: GPIO18
    on_state:
      if:
        condition:
          - switch.is_off: relay_1_switch
        then:
          - switch.turn_on: relay_1_switch
        else:
          - homeassistant.service:
              service: homeassistant.toggle
              data:
                entity_id: light.stairs
    internal: true

sensor:
  # Power Sensor
  - platform: ade7953_i2c
    irq_pin: GPIO27
    voltage:
      name: ${formated_name} Voltage
      entity_category: diagnostic
    current_a:
      name: ${channel_2} Current
      entity_category: diagnostic
    active_power_a:
      name: ${channel_2} Power
      id: power_channel_2
      entity_category: diagnostic
      filters:
        - multiply: -1
      on_value_range:
        - above: ${max_power}
          then:
            - light.turn_off: family_room_light
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${formated_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    current_b:
      name: ${channel_1} Current
      entity_category: diagnostic
    active_power_b:
      name: ${channel_1} Power
      id: power_channel_1
      entity_category: diagnostic
      filters:
        - multiply: -1
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay_1_switch
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${formated_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    update_interval: 10s

  # Internal NTC Temperature sensor
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${formated_name} Temperature
    unit_of_measurement: Â°C
    accuracy_decimals: 1
    icon: mdi:thermometer
    entity_category: diagnostic
    calibration:
      b_constant: 3350
      reference_resistance: 4.7kOhm
      reference_temperature: 298.15K

  # Required for NTC sensor
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 5.6kOhm

  # Required for NTC sensor
  - platform: adc
    id: temp_analog_reading
    pin: GPIO35
    attenuation: 12db
    update_interval: 10s
